filter {
################################
# proxy server patterns info
################################
  if ([programname] == "proxy-server" and [severity] == "info") or ([programname] == "proxy-server" and [severity] == "notice") {
    if "Copying object from" in [message] and "to" in [message] {
      grok {
        patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/extra_patterns"]
        match => { "message" => " Copying object from %{COPYFROMUNICODE:copy_from_obj_path} to %{NOTSPACE:copy_to_obj_path} \(txn: %{NOTSPACE:transaction_id}\)" }
        remove_tag => ["_grokparsefailure"]
        add_tag => ["swift", "PROXY_SER_SIDE_COPY"]
      }
    }
    else if "Attempting to serve" in [message] and "from" in [message] {
      grok {
        patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/extra_patterns"]
        match => { "message" => " Attempting to serve %{NOTSPACE:attempting_obj} from \['%{NOTSPACE:obj_path_1}', '%{NOTSPACE:obj_path_2}', '%{NOTSPACE:obj_path_3}'\] \(txn: %{NOTSPACE:transaction_id}\)" }
        remove_tag => ["_grokparsefailure"]
        add_tag => ["swift", "PROXY_SER_ATTEMPTING_TO"]
      }
    }
    else if "swiftstack_ldap: Updating identity" in [message] {
      grok {
        patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/extra_patterns"]
        match => { "message" => "swiftstack_ldap: Updating identity %{COPYFROMUNICODE:update_identity_json} \(txn: %{NOTSPACE:transaction_id}\)" }
        remove_tag => ["_grokparsefailure"]
        add_tag => ["swift", "PROXY_SER_UPDATE_LDAP_ID"]
      }
    }
    else if "swiftstack_ldap: Adding group membership of" in [message] {
      grok {
        patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/extra_patterns"]
        match => { "message" => "swiftstack_ldap: Adding group membership of %{COPYFROMUNICODE:add_identity_json} for user %{NOTSPACE:ad_user} \(txn: %{NOTSPACE:transaction_id}\)" }
        remove_tag => ["_grokparsefailure"]
        add_tag => ["swift", "PROXY_SER_ADDING_LDAP_GROUP"]
      }
    }
    else if "ERROR WSGI: code" in [message] and "message Bad HTTP" in [message] {
      grok {
        patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/extra_patterns"]
        match => { "message" => " ERROR WSGI: code %{NOTSPACE:ErrorCode}, message Bad HTTP/0.9 request type \(%{COPYFROMUNICODE:ErrRequestType}\) (?:\(txn: %{TXN:txn}\)) (?:\(client_ip: %{IP:client_ip}\))" }
        remove_tag => ["_grokparsefailure"]
        add_tag => ["swift", "PROXY_SER_ERR_WSGI"]
      }
    }
    else if "HTTP/" in [message] {
      grok {
        patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/extra_patterns"]
        match => { "message" => " %{NOTSPACE:client_ip} %{NOTSPACE:remote_addr} %{SWIFT_PROXY_DATETIME:datetime} %{WORD:request_method} %{URIPATHPARAM:request_path} HTTP/%{NUMBER:protocol} %{NUMBER:status_int} %{NOTSPACE:referer} (?:%{NOTSPACE:user_agent} (?:%{NOTSPACE:swift_account}\%2C%{NOTSPACE:auth_method}_%{NOTSPACE}|%{NOTSPACE:auth_token}) %{NOTSPACE:bytes_recvd:int} %{NOTSPACE:bytes_sent:int} %{NOTSPACE:client_etag} %{NOTSPACE:transaction_id} %{NOTSPACE:headers} %{NUMBER:request_time:float} %{NOTSPACE:source} %{NOTSPACE:log_info} %{NUMBER:request_start_time:float} %{NUMBER:request_end_time:float} %{NOTSPACE:policy_index:int}||-)" }
        remove_tag => ["_grokparsefailure"]
        add_tag => ["swift", "PROXY_SER_TRANSACTION"]
      }
    }
    else {
      grok {
        patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/extra_patterns"]
        match => { "message" => "%{COPYFROMUNICODE:proxy_server_info_in_general}" }
        remove_tag => ["_grokparsefailure"]
        add_tag => ["swift", "PROXY_SER_INFO_GENERAL"]
      }
    }
  }
################################
# proxy server patterns warning
################################
  if [programname] == "proxy-server" and [severity] == "warning" {
    if "ERROR" in [message] and "Client read timeout" in [message] {
      grok {
        patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/extra_patterns"]
        match => { "message" => " ERROR Client read timeout \(%{NOTSPACE:proxyclientreadtimeout:int}s\) \(txn: %{NOTSPACE:transaction_id}\) \(client_ip: %{NOTSPACE:client_ip}\)" }
        remove_tag => ["_grokparsefailure"]
        add_tag => ["swift", "PROXY_SER_CLIENT_READ_TIMEOUT"]
      }
    }
    if "Client disconnected on read" in [message] {
      grok {
        patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/extra_patterns"]
        match => { "message" => " Client disconnected on read (?:\(txn: %{NOTSPACE:transaction_id}\) \(client_ip: %{NOTSPACE:client_ip}\)|\(txn: %{NOTSPACE:transaction_id}\))" }
        remove_tag => ["_grokparsefailure"]
        add_tag => ["swift", "PROXY_SER_CLIENT_DISCONNECT_READ"]
      }
    }
    else {
      grok {
        patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/extra_patterns"]
        match => { "message" => " %{COPYFROMUNICODE:proxyserverwarning}" }
        remove_tag => ["_grokparsefailure"]
        add_tag => ["swift", "PROXY_SER_WARNING"]
      }
    }
  }
################################
# proxy server patterns debug
################################
  if [programname] == "proxy-server" and [severity] == "debug" {
    if "Calling Swift3 Middleware" in [message] and "client_ip" in [message] {
      grok {
        patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/extra_patterns"]
        match => { "message" => " Calling Swift3 Middleware (?:\(txn: %{TXN:transaction_id}\) \(client_ip: %{IP:client_ip}\)|\(txn: %{TXN:transaction_id}\))" }
        remove_tag => ["_grokparsefailure"]
        add_tag => ["swift", "PROXY_SWIFT3"]
      }
    }
    else if "removed response headers" in [message] {
      grok {
        patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/extra_patterns"]
        match => { "message" => " removed response headers: %{COPYFROMUNICODE:removed_response_headers_json} (?:\(txn: %{NOTSPACE:transaction_id}\) \(client_ip: %{NOTSPACE:client_ip}\)|\(txn: %{NOTSPACE:transaction_id}\))" }
        remove_tag => ["_grokparsefailure"]
        add_tag => ["swift", "PROXY_REMOVE_HEADER_JSON"]
      }
    }
  }
}
