filter {
################################
# account Replicator patterns
################################
  if [programname] == "account-replicator" {
    if [severity] == "info" or [severity] == "notice" {
      if "Beginning" in [message] {
        grok {
          patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/extra_patterns"]
          match => { "message" => " Beginning replication run" }
          remove_tag => ["_grokparsefailure"]
          add_tag => ["swift", "ACCT_REP_START"]
        }
      }
      else if "OVER" in [message] {
        grok {
          patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/extra_patterns"]
          match => { "message" => " Replication run OVER" }
          remove_tag => ["_grokparsefailure"]
          add_tag =>  [ "swift", "ACCT_REP_FINISH" ]
        }
      }
      else if "Attempted to replicate" in [message] {
        grok {
          match => { "message" => " Attempted to replicate %{NUMBER:ReplicatorNumDBs:int} dbs in %{NUMBER:ReplicationDBsSeconds:float} seconds \(%{NUMBER:ReplicationDBsBytePerSecond:float}/s\)" }
          remove_tag => ["_grokparsefailure"]
          add_tag => ["swift", "ACCT_REP_ATTEMPTED"]
        }
      }
      else if "Removed" in [message] {
        grok {
          match => { "message" => " Removed %{NUMBER:ReplicatorRemovedDBs} dbs" }
          remove_tag => ["_grokparsefailure"]
          add_tag => ["swift", "ACCT_REP_REMOVED"]
        }
      }
      else if ("diff" in [message] and "diff_capped" in [message] and "empty" in [message] and "hashmatch" in [message] and "no_change" in [message] and "remote_merge" in [message] and "rsync" in [message] and "ts_repl" in [message]) {
        grok {
          match => { "message" => [" no_change:%{NUMBER:ReplicationNoChange:int} ts_repl:%{NUMBER:ReplicationTS:int} diff:%{NUMBER:ReplicationDiff:int} rsync:%{NUMBER:ReplicationRsync:int} diff_capped:%{NUMBER:ReplicationDiffCap:int} hashmatch:%{NUMBER:ReplicationHashMatch:int} empty:%{NUMBER:ReplicationEmpty:int}", " diff\:%{NUMBER:ReplicationDiff} diff_capped\:%{NUMBER:ReplicationDiffCap} empty\:%{NUMBER:ReplicationEmpty} hashmatch\:%{NUMBER:ReplicationHashMatch} no_change\:%{NUMBER:ReplicationNoChange} remote_merge\:%{NUMBER:ReplicationRemoteMerge} rsync\:%{NUMBER:ReplicationRsync} ts_repl\:%{NUMBER:ReplicationTS}"] }
          remove_tag => ["_grokparsefailure"]
          add_tag => ["swift", "ACCT_REP_CHANGE"]
        }
      }
      else if ("Skipping" in [message] and "as it is not mounted" in [message]) {
        grok {
          patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/extra_patterns"]
          match => { "message" => " Skipping %{NOTSPACE:driveID} as it is not mounted" }
          remove_tag => ["_grokparsefailure"]
          add_tag => ["swift", "ACCT_REP_SKIP_NOT_MOUNTED"]
        }
      }
      else if "Replicating db" in [message] {
        grok {
          patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/extra_patterns"]
          match => { "message" => " Replicating db %{COPYFROMUNICODE:ReplicatingDBFilePath}" }
          remove_tag => ["_grokparsefailure"]
          add_tag => ["swift", "ACCT_REP_DB"]
        }
      }
      else {
        grok {
          patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/extra_patterns"]
          match => { "message" => " %{NUMBER:ReplicationSuccess:int} successes, %{NUMBER:ReplicationFail:int} failure" }
          remove_tag => ["_grokparsefailure"]
          add_tag => ["swift", "ACCT_REP_RATE"]
        }
      }
    }
    else if [severity] == "err" {
      if "ERROR reading HTTP response from" in [message] {
        grok {
          patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/extra_patterns"]
          match => { "message" => " ERROR reading HTTP response from %{COPYFROMUNICODE:ReplicatorHttp_err_response_json}: %{COPYFROMUNICODE:ReplicatorErr_msg}" }
          remove_tag => ["_grokparsefailure"]
          add_tag => ["swift", "ACCT_REP_ERR"]
        }
      }
    }
  }
################################
# account server patterns
################################
  if [programname] == "account-server" {
    if [severity] == "info" or [severity] == "notice" {
      grok {
        patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/extra_patterns"]
        match => { "message" => "%{IP:remote_addr} - - \[%{SWIFT_DATETIME:datetime} \+0000\] \"%{WORD:request_method} %{URIPATHPARAM:request_path}\" %{NUMBER:status_int} (?:%{NUMBER:content_length}|-) \"(?:%{COPYFROMUNICODE:referer}|-)\" \"(?:%{TXN:transaction_id}|-)\" \"(?:%{COPYFROMUNICODE:user_agent}|-)\" %{NUMBER:request_time:float} \"-\" %{NUMBER:server_pid:int} (?:%{NUMBER:policy_index:int}|-)" }
        remove_tag => ["_grokparsefailure"]
        add_tag => ["swift", "ACCT_SER_TRANSACTION"]
      }
    }
  }
}
